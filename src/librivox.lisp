(in-package :librivox)
(defvar *recent* #p"recent.csv")
(defun start ()
  "Just start everything: download, convert, upload."
  (convert-all))
(defmacro sleep-repeat (seconds &body code)
  `(progn (sleep ,seconds)
          ,@code))
(defun await-upload (&optional (wait-period 1))
  "If everything is caught up, wait and recheck."
  (labels ((waiter (prev-down)
             (progn (let ((latest (progn (update *recent*)
                                         (recent-identifier *recent*))))
                      (if (string= latest prev-down)
                          (progn (format t "Nothing left to do. Waiting for ~D seconds before rechecking for work." wait-period)
                                 (sleep-repeat wait-period (waiter prev-down))))))))
    (waiter (recent-identifier *recent*))))
